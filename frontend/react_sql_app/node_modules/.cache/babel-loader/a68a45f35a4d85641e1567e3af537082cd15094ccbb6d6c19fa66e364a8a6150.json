{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{Table}from'react-bootstrap';import'./App.css';import classNames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PredictDraws=props=>{const{endpoint,endpoint2,columns,lotto_name}=props;const[numbers,setNumbers]=useState();const[predicts,setPredicts]=useState([]);useEffect(()=>{// Fetch data from the specified endpoint\n(async()=>{const result=await axios(endpoint);setNumbers(result.data.data[0].Numbers);//console.log(numbers)\n})();},[columns,endpoint]);const processNextPrediction=async()=>{try{const promises=[await axios.post(endpoint2)];const responses=await Promise.all(promises);// Extract data from each response\nconst result=responses.map(response=>response.data);return result;}catch(error){console.error('Error processing next prediction:',error);}};const fetchData=async()=>{try{const result=await processNextPrediction();setPredicts(result[0]);return predicts;}catch(error){console.error('Error updating predicts:',error);}};const getPredicts=cols=>{var pred=[];// take 1 from last hits\nlet lastHits=getLastHitNumbers();var indx=Math.random()*lastHits.length;pred.push(lastHits[parseInt(indx)]);// select 3 groups based on totalHits\nvar flip_coin=Math.random()*2;var arr=flip_coin>=1?getTotalHitsNumbers():getDistanceNumbers();let low=arr[0];let middle=arr[1];let high=arr[2];// take 1 low\nindx=Math.random()*low.length;pred.push(low[parseInt(indx)].Value);// take 2 middle\nindx=Math.random()*middle.length;pred.push(middle[parseInt(indx)].Value);indx=Math.random()*middle.length;pred.push(middle[parseInt(indx)].Value);if(flip_coin<1){// add two more\nindx=Math.random()*middle.length;pred.push(middle[parseInt(indx)].Value);indx=Math.random()*middle.length;pred.push(middle[parseInt(indx)].Value);}pred=[...new Set(pred)];if(pred.length<4){indx=Math.random()*middle.length;pred.push(middle[parseInt(indx)].Value);}// take 3 high\nindx=Math.random()*high.length;pred.push(high[parseInt(indx)].Value);if(flip_coin>=1){indx=Math.random()*high.length;pred.push(high[parseInt(indx)].Value);indx=Math.random()*high.length;pred.push(high[parseInt(indx)].Value);}pred=[...new Set(pred)];while(pred.length<cols){indx=Math.random()*high.length;pred.push(high[parseInt(indx)].Value);pred=[...new Set(pred)];}pred.sort((a,b)=>a-b);console.log(pred);return pred;};const getLastHitNumbers=()=>{var arr=[];for(var i=0;i<numbers.length;i++){if(numbers[i].IsHit===true)arr.push(numbers[i].Value);}return arr.sort((a,b)=>a-b);};const getTotalHitsNumbers=()=>{var tmp=numbers.sort((a,b)=>a.TotalHits>b.TotalHits?1:-1);var low=[];var middle=[];var high=[];var oneThird=parseInt(tmp.length/3+1);var twoThird=parseInt(tmp.length*2/3+1);for(var i=0;i<tmp.length;i++){if(i<oneThird){low.push(tmp[i]);}else if(i<twoThird){middle.push(tmp[i]);}else{high.push(tmp[i]);}}var arr=[];arr.push(low);arr.push(middle);arr.push(high);return arr;};const getDistanceNumbers=()=>{var tmp=numbers.sort((a,b)=>a.Distance>b.Distance?1:-1);var low=[];var middle=[];var high=[];var oneThird=parseInt(tmp.length/3+1);var twoThird=parseInt(tmp.length*2/3+1);for(var i=0;i<tmp.length;i++){if(tmp[i].Distance===0)continue;if(i<oneThird){low.push(tmp[i]);}else if(i<twoThird){middle.push(tmp[i]);}else{high.push(tmp[i]);}}var arr=[];arr.push(low);arr.push(middle);arr.push(high);return arr;};const getHeader=()=>{return/*#__PURE__*/_jsx(\"thead\",{className:\"table-danger text-center\",children:/*#__PURE__*/_jsx(\"tr\",{children:Array.from(Array(10).keys()).map(no=>/*#__PURE__*/_jsx(\"th\",{className:\"text-warning bg-success\",children:no+1},no))})});};const getRow=(start,end)=>{return/*#__PURE__*/_jsx(\"tr\",{children:numbers.map(no=>no.Value>start&&no.Value<=end?/*#__PURE__*/_jsxs(\"td\",{className:classNames('bg-color',{'bg-color8':predicts.indexOf(no.Value)>-1},{'bg-greenyellow':predicts.indexOf(no.Value)<0}),children:[/*#__PURE__*/_jsxs(\"span\",{className:classNames('fs-5 font-color',{'text-danger':predicts.indexOf(no.Value)>-1},{'text-success':predicts.indexOf(no.Value)<0}),children:[no.Value,\"   \"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-primary fst-italic\",children:[\"(\",no.Distance,\")\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"my-color-2 fst-italic\",children:[\"(\",no.TotalHits,\")\"]})]},no.Value):'')});};return/*#__PURE__*/_jsxs(\"div\",{children:[numbers&&/*#__PURE__*/_jsxs(Table,{responsive:true,className:\"table-primary mb-3\",size:\"lg\",children:[getHeader(),/*#__PURE__*/_jsxs(\"tbody\",{className:\"fw-bold\",children:[getRow(0,10),getRow(10,20),getRow(20,30),getRow(30,40),getRow(40,50)]}),getHeader()]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Table,{responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{className:\"table-danger text-center\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[Array.from(Array(columns).keys()).map(no=>/*#__PURE__*/_jsx(\"th\",{className:\"text-warning bg-success\",children:no+1},no)),/*#__PURE__*/_jsx(\"th\",{className:\"text-warning bg-success\",children:\"Bonus\"})]})}),/*#__PURE__*/_jsx(\"tr\",{children:predicts.map(p=>/*#__PURE__*/_jsx(\"td\",{className:\"bg-color1 text-center text-danger fs-4 fw-bold px-2\",children:p},p))})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\"/* onClick={() => setPredicts(getPredicts(columns + 1))} */,onClick:fetchData,className:\"btn btn-primary fw-bold float-end\",children:\"Predict Next Draw\"})]})]});};export default PredictDraws;","map":{"version":3,"names":["React","useEffect","useState","axios","Table","classNames","jsx","_jsx","jsxs","_jsxs","PredictDraws","props","endpoint","endpoint2","columns","lotto_name","numbers","setNumbers","predicts","setPredicts","result","data","Numbers","processNextPrediction","promises","post","responses","Promise","all","map","response","error","console","fetchData","getPredicts","cols","pred","lastHits","getLastHitNumbers","indx","Math","random","length","push","parseInt","flip_coin","arr","getTotalHitsNumbers","getDistanceNumbers","low","middle","high","Value","Set","sort","a","b","log","i","IsHit","tmp","TotalHits","oneThird","twoThird","Distance","getHeader","className","children","Array","from","keys","no","getRow","start","end","indexOf","responsive","size","p","type","onClick"],"sources":["H:/programs/ai.lottotry.com/frontend/react_sql_app/src/PredictDraws.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Table } from 'react-bootstrap'\r\nimport './App.css'\r\nimport classNames from 'classnames'\r\n\r\n\r\n\r\nconst PredictDraws = (props) => {\r\n  const { endpoint, endpoint2, columns, lotto_name } = props\r\n\r\n  const [numbers, setNumbers] = useState()\r\n  const [predicts, setPredicts] = useState([])\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the specified endpoint\r\n\r\n    (async () => {\r\n      const result = await axios(endpoint)\r\n      setNumbers(result.data.data[0].Numbers)\r\n      //console.log(numbers)\r\n    })()\r\n\r\n  }, [columns, endpoint]);\r\n\r\n\r\n  const processNextPrediction = async () => {\r\n\r\n    try {\r\n      const promises = [await axios.post(endpoint2)]\r\n      const responses = await Promise.all(promises);\r\n\r\n      // Extract data from each response\r\n      const result = responses.map(response => response.data);    \r\n      return result\r\n    } catch (error) {\r\n      console.error('Error processing next prediction:', error);\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const result = await processNextPrediction();\r\n      setPredicts(result[0]);\r\n      return predicts\r\n    } catch (error) {\r\n      console.error('Error updating predicts:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const getPredicts = (cols) => {\r\n\r\n    var pred = []\r\n\r\n    // take 1 from last hits\r\n    let lastHits = getLastHitNumbers()\r\n    var indx = Math.random() * (lastHits.length)\r\n    pred.push(lastHits[parseInt(indx)])\r\n\r\n    // select 3 groups based on totalHits\r\n    var flip_coin = Math.random() * 2\r\n\r\n    var arr = flip_coin >= 1 ? getTotalHitsNumbers() : getDistanceNumbers()\r\n    let low = arr[0]\r\n    let middle = arr[1]\r\n    let high = arr[2]\r\n\r\n\r\n    // take 1 low\r\n    indx = Math.random() * low.length\r\n    pred.push(low[parseInt(indx)].Value)\r\n\r\n\r\n    // take 2 middle\r\n    indx = Math.random() * middle.length\r\n    pred.push(middle[parseInt(indx)].Value)\r\n\r\n    indx = Math.random() * middle.length\r\n    pred.push(middle[parseInt(indx)].Value)\r\n\r\n    if (flip_coin < 1) {\r\n      // add two more\r\n      indx = Math.random() * middle.length\r\n      pred.push(middle[parseInt(indx)].Value)\r\n      indx = Math.random() * middle.length\r\n      pred.push(middle[parseInt(indx)].Value)\r\n    }\r\n\r\n    pred = [...new Set(pred)]\r\n    if (pred.length < 4) {\r\n      indx = Math.random() * middle.length\r\n      pred.push(middle[parseInt(indx)].Value)\r\n    }\r\n\r\n    // take 3 high\r\n    indx = Math.random() * high.length\r\n    pred.push(high[parseInt(indx)].Value)\r\n    if (flip_coin >= 1) {\r\n      indx = Math.random() * high.length\r\n      pred.push(high[parseInt(indx)].Value)\r\n\r\n      indx = Math.random() * high.length\r\n      pred.push(high[parseInt(indx)].Value)\r\n    }\r\n\r\n    pred = [...new Set(pred)]\r\n    while (pred.length < cols) {\r\n      indx = Math.random() * high.length\r\n      pred.push(high[parseInt(indx)].Value)\r\n      pred = [...new Set(pred)]\r\n    }\r\n    pred.sort((a, b) => a - b)\r\n\r\n    console.log(pred)\r\n    return pred\r\n\r\n  }\r\n\r\n  const getLastHitNumbers = () => {\r\n    var arr = []\r\n    for (var i = 0; i < numbers.length; i++) {\r\n      if (numbers[i].IsHit === true)\r\n        arr.push(numbers[i].Value)\r\n    }\r\n\r\n    return arr.sort((a, b) => a - b)\r\n  }\r\n\r\n  const getTotalHitsNumbers = () => {\r\n\r\n    var tmp = numbers.sort((a, b) => a.TotalHits > b.TotalHits ? 1 : -1)\r\n    var low = []\r\n    var middle = []\r\n    var high = []\r\n\r\n    var oneThird = parseInt(tmp.length / 3 + 1)\r\n    var twoThird = parseInt((tmp.length * 2) / 3 + 1)\r\n\r\n    for (var i = 0; i < tmp.length; i++) {\r\n      if (i < oneThird) {\r\n        low.push(tmp[i])\r\n      }\r\n      else if (i < twoThird) {\r\n        middle.push(tmp[i])\r\n      }\r\n      else {\r\n        high.push(tmp[i])\r\n      }\r\n    }\r\n\r\n    var arr = []\r\n    arr.push(low)\r\n    arr.push(middle)\r\n    arr.push(high)\r\n\r\n    return arr\r\n  }\r\n\r\n\r\n  const getDistanceNumbers = () => {\r\n\r\n    var tmp = numbers.sort((a, b) => a.Distance > b.Distance ? 1 : -1)\r\n    var low = []\r\n    var middle = []\r\n    var high = []\r\n\r\n    var oneThird = parseInt(tmp.length / 3 + 1)\r\n    var twoThird = parseInt((tmp.length * 2) / 3 + 1)\r\n\r\n    for (var i = 0; i < tmp.length; i++) {\r\n      if (tmp[i].Distance === 0) continue\r\n\r\n      if (i < oneThird) {\r\n        low.push(tmp[i])\r\n      }\r\n      else if (i < twoThird) {\r\n        middle.push(tmp[i])\r\n      }\r\n      else {\r\n        high.push(tmp[i])\r\n      }\r\n    }\r\n\r\n    var arr = []\r\n    arr.push(low)\r\n    arr.push(middle)\r\n    arr.push(high)\r\n\r\n    return arr\r\n  }\r\n\r\n\r\n  const getHeader = () => {\r\n    return (\r\n      <thead className=\"table-danger text-center\">\r\n        <tr>\r\n          {Array.from(Array(10).keys()).map((no) =>\r\n            (<th key={no} className='text-warning bg-success'>{no + 1}</th>))}\r\n        </tr>\r\n      </thead>\r\n    )\r\n  }\r\n\r\n  const getRow = (start, end) => {\r\n    return (\r\n      <tr>\r\n        {numbers\r\n          .map(no => no.Value > start && no.Value <= end ?\r\n            (<td className={classNames('bg-color', { 'bg-color8': predicts.indexOf(no.Value) > -1 }, { 'bg-greenyellow': predicts.indexOf(no.Value) < 0 })} key={no.Value}>\r\n              <span className={classNames('fs-5 font-color', { 'text-danger': predicts.indexOf(no.Value) > -1 }, { 'text-success': predicts.indexOf(no.Value) < 0 })}>{no.Value}   </span>\r\n              <span className='text-primary fst-italic'>({no.Distance})</span>\r\n              <span className='my-color-2 fst-italic'>({no.TotalHits})</span></td>)\r\n            : '')}\r\n      </tr>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      {numbers &&\r\n        <Table responsive className=\"table-primary mb-3\" size=\"lg\" >\r\n          {getHeader()}\r\n\r\n          <tbody className='fw-bold' >\r\n\r\n            {getRow(0, 10)}\r\n            {getRow(10, 20)}\r\n            {getRow(20, 30)}\r\n            {getRow(30, 40)}\r\n            {getRow(40, 50)}\r\n          </tbody>\r\n\r\n          {getHeader()}\r\n        </Table>}\r\n      <div>\r\n        <Table responsive>\r\n          <thead className=\"table-danger text-center\">\r\n            <tr>\r\n              {Array.from(Array(columns).keys()).map((no) =>\r\n                (<th key={no} className='text-warning bg-success'>{no + 1}</th>))}\r\n              <th className='text-warning bg-success'>Bonus</th>\r\n            </tr>\r\n          </thead>\r\n          <tr>\r\n            {predicts.map(p => (<td className='bg-color1 text-center text-danger fs-4 fw-bold px-2' key={p}>{p}</td>))}\r\n          </tr>\r\n        </Table>\r\n        <button\r\n          type=\"button\"\r\n          /* onClick={() => setPredicts(getPredicts(columns + 1))} */\r\n          onClick={fetchData}\r\n          className=\"btn btn-primary fw-bold float-end\">Predict Next Draw</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default PredictDraws"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}