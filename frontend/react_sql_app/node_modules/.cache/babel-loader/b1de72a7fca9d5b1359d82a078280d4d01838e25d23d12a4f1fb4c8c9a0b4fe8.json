{"ast":null,"code":"var _jsxFileName = \"H:\\\\programs\\\\ai.lottotry.com\\\\frontend\\\\react_sql_app\\\\src\\\\Components\\\\PredictDraws.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\nimport '../App.css';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictDraws = props => {\n  _s();\n  const {\n    endpoint,\n    endpoint2,\n    endpoint3,\n    columns\n  } = props;\n  const [numbers, setNumbers] = useState();\n  const [predicts, setPredicts] = useState([]);\n  useEffect(() => {\n    // Fetch data from the specified endpoint\n\n    (async () => {\n      const result = await axios(endpoint);\n      setNumbers(result.data.data[0].Numbers);\n      //console.log(numbers)\n    })();\n  }, [columns, endpoint]);\n  const processNextPrediction = async () => {\n    try {\n      const promises = [await axios.post(endpoint2)];\n      const responses = await Promise.all(promises);\n\n      // Extract data from each response\n      const result = responses.map(response => response.data);\n      return result;\n    } catch (error) {\n      console.error('Error processing next prediction:', error);\n    }\n  };\n  const processNextPotentialDraws = async () => {\n    try {\n      const promises = [await axios.post(endpoint3)];\n      const responses = await Promise.all(promises);\n\n      // Extract data from each response\n      const result = responses.map(response => response.data);\n      return result;\n    } catch (error) {\n      console.error('Error processing next prediction:', error);\n    }\n  };\n  const fetchData = async isForPotential => {\n    try {\n      var result = null;\n      if (isForPotential) {\n        result = await processNextPotentialDraws();\n      } else {\n        result = await processNextPrediction();\n      }\n      setPredicts(result[0]);\n      return predicts;\n    } catch (error) {\n      console.error('Error updating predicts:', error);\n    }\n  };\n\n  /*\r\n    const getPredicts = (cols) => {\r\n  \r\n      var pred = []\r\n  \r\n      // take 1 from last hits\r\n      let lastHits = getLastHitNumbers()\r\n      var indx = Math.random() * (lastHits.length)\r\n      pred.push(lastHits[parseInt(indx)])\r\n  \r\n      // select 3 groups based on totalHits\r\n      var flip_coin = Math.random() * 2\r\n  \r\n      var arr = flip_coin >= 1 ? getTotalHitsNumbers() : getDistanceNumbers()\r\n      let low = arr[0]\r\n      let middle = arr[1]\r\n      let high = arr[2]\r\n  \r\n  \r\n      // take 1 low\r\n      indx = Math.random() * low.length\r\n      pred.push(low[parseInt(indx)].Value)\r\n  \r\n  \r\n      // take 2 middle\r\n      indx = Math.random() * middle.length\r\n      pred.push(middle[parseInt(indx)].Value)\r\n  \r\n      indx = Math.random() * middle.length\r\n      pred.push(middle[parseInt(indx)].Value)\r\n  \r\n      if (flip_coin < 1) {\r\n        // add two more\r\n        indx = Math.random() * middle.length\r\n        pred.push(middle[parseInt(indx)].Value)\r\n        indx = Math.random() * middle.length\r\n        pred.push(middle[parseInt(indx)].Value)\r\n      }\r\n  \r\n      pred = [...new Set(pred)]\r\n      if (pred.length < 4) {\r\n        indx = Math.random() * middle.length\r\n        pred.push(middle[parseInt(indx)].Value)\r\n      }\r\n  \r\n      // take 3 high\r\n      indx = Math.random() * high.length\r\n      pred.push(high[parseInt(indx)].Value)\r\n      if (flip_coin >= 1) {\r\n        indx = Math.random() * high.length\r\n        pred.push(high[parseInt(indx)].Value)\r\n  \r\n        indx = Math.random() * high.length\r\n        pred.push(high[parseInt(indx)].Value)\r\n      }\r\n  \r\n      pred = [...new Set(pred)]\r\n      while (pred.length < cols) {\r\n        indx = Math.random() * high.length\r\n        pred.push(high[parseInt(indx)].Value)\r\n        pred = [...new Set(pred)]\r\n      }\r\n      pred.sort((a, b) => a - b)\r\n  \r\n      console.log(pred)\r\n      return pred\r\n  \r\n    }\r\n  \r\n    const getLastHitNumbers = () => {\r\n      var arr = []\r\n      for (var i = 0; i < numbers.length; i++) {\r\n        if (numbers[i].IsHit === true)\r\n          arr.push(numbers[i].Value)\r\n      }\r\n  \r\n      return arr.sort((a, b) => a - b)\r\n    }\r\n  \r\n    const getTotalHitsNumbers = () => {\r\n  \r\n      var tmp = numbers.sort((a, b) => a.TotalHits > b.TotalHits ? 1 : -1)\r\n      var low = []\r\n      var middle = []\r\n      var high = []\r\n  \r\n      var oneThird = parseInt(tmp.length / 3 + 1)\r\n      var twoThird = parseInt((tmp.length * 2) / 3 + 1)\r\n  \r\n      for (var i = 0; i < tmp.length; i++) {\r\n        if (i < oneThird) {\r\n          low.push(tmp[i])\r\n        }\r\n        else if (i < twoThird) {\r\n          middle.push(tmp[i])\r\n        }\r\n        else {\r\n          high.push(tmp[i])\r\n        }\r\n      }\r\n  \r\n      var arr = []\r\n      arr.push(low)\r\n      arr.push(middle)\r\n      arr.push(high)\r\n  \r\n      return arr\r\n    }\r\n  \r\n  \r\n    const getDistanceNumbers = () => {\r\n  \r\n      var tmp = numbers.sort((a, b) => a.Distance > b.Distance ? 1 : -1)\r\n      var low = []\r\n      var middle = []\r\n      var high = []\r\n  \r\n      var oneThird = parseInt(tmp.length / 3 + 1)\r\n      var twoThird = parseInt((tmp.length * 2) / 3 + 1)\r\n  \r\n      for (var i = 0; i < tmp.length; i++) {\r\n        if (tmp[i].Distance === 0) continue\r\n  \r\n        if (i < oneThird) {\r\n          low.push(tmp[i])\r\n        }\r\n        else if (i < twoThird) {\r\n          middle.push(tmp[i])\r\n        }\r\n        else {\r\n          high.push(tmp[i])\r\n        }\r\n      }\r\n  \r\n      var arr = []\r\n      arr.push(low)\r\n      arr.push(middle)\r\n      arr.push(high)\r\n  \r\n      return arr\r\n    }\r\n  */\n\n  const getHeader = () => {\n    return /*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"table-danger text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Array.from(Array(10).keys()).map(no => /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"text-warning bg-success\",\n          children: no + 1\n        }, no, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 14\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this);\n  };\n  const getRow = (start, end) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: numbers.map(no => no.Value > start && no.Value <= end ? /*#__PURE__*/_jsxDEV(\"td\", {\n        className: classNames('bg-color', {\n          'bg-color8': predicts.indexOf(no.Value) > -1\n        }, {\n          'bg-greenyellow': predicts.indexOf(no.Value) < 0\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classNames('fs-5 font-color', {\n            'text-danger': predicts.indexOf(no.Value) > -1\n          }, {\n            'text-success': predicts.indexOf(no.Value) < 0\n          }),\n          children: [no.Value, \"   \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-primary fst-italic\",\n          children: [\"(\", no.Distance, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"my-color-2 fst-italic\",\n          children: [\"(\", no.TotalHits, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)]\n      }, no.Value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 14\n      }, this) : '')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [numbers && /*#__PURE__*/_jsxDEV(Table, {\n      responsive: true,\n      className: \"table-primary mb-3\",\n      size: \"lg\",\n      children: [getHeader(), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"fw-bold\",\n        children: [getRow(0, 10), getRow(10, 20), getRow(20, 30), getRow(30, 40), getRow(40, 50)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), getHeader()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-danger text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [Array.from(Array(columns).keys()).map(no => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-warning bg-success\",\n              children: no + 1\n            }, no, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 18\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-warning bg-success\",\n              children: \"Bonus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: predicts.map(row => row.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"bg-color1 text-center text-danger fs-4 fw-bold px-2\",\n            children: col\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => fetchData(false),\n        className: \"btn btn-primary fw-bold float-end margin-left\",\n        children: \"Predict Next Draw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => fetchData(true),\n        className: \"btn btn-primary fw-bold float-end margin-right\",\n        children: \"Generate Potential Draws\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s(PredictDraws, \"BmJAQwyelA/NyuIxEsiPkAtmFwQ=\");\n_c = PredictDraws;\nexport default PredictDraws;\nvar _c;\n$RefreshReg$(_c, \"PredictDraws\");","map":{"version":3,"names":["React","useEffect","useState","axios","Table","classNames","jsxDEV","_jsxDEV","PredictDraws","props","_s","endpoint","endpoint2","endpoint3","columns","numbers","setNumbers","predicts","setPredicts","result","data","Numbers","processNextPrediction","promises","post","responses","Promise","all","map","response","error","console","processNextPotentialDraws","fetchData","isForPotential","getHeader","className","children","Array","from","keys","no","fileName","_jsxFileName","lineNumber","columnNumber","getRow","start","end","Value","indexOf","Distance","TotalHits","responsive","size","row","col","type","onClick","_c","$RefreshReg$"],"sources":["H:/programs/ai.lottotry.com/frontend/react_sql_app/src/Components/PredictDraws.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Table } from 'react-bootstrap'\r\nimport '../App.css'\r\nimport classNames from 'classnames'\r\n\r\n\r\n\r\nconst PredictDraws = (props) => {\r\n  const { endpoint, endpoint2, endpoint3, columns } = props\r\n\r\n  const [numbers, setNumbers] = useState()\r\n  const [predicts, setPredicts] = useState([])\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the specified endpoint\r\n\r\n    (async () => {\r\n      const result = await axios(endpoint)\r\n      setNumbers(result.data.data[0].Numbers)\r\n      //console.log(numbers)\r\n    })()\r\n\r\n  }, [columns, endpoint]);\r\n\r\n\r\n  const processNextPrediction = async () => {\r\n\r\n    try {\r\n      const promises = [await axios.post(endpoint2)]\r\n      const responses = await Promise.all(promises);\r\n\r\n      // Extract data from each response\r\n      const result = responses.map(response => response.data);\r\n      return result\r\n    } catch (error) {\r\n      console.error('Error processing next prediction:', error);\r\n    }\r\n  }\r\n  const processNextPotentialDraws= async () => {\r\n\r\n    try {\r\n      const promises = [await axios.post(endpoint3)]\r\n      const responses = await Promise.all(promises);\r\n\r\n      // Extract data from each response\r\n      const result = responses.map(response => response.data);\r\n      return result\r\n    } catch (error) {\r\n      console.error('Error processing next prediction:', error);\r\n    }\r\n  }\r\n\r\n  const fetchData = async (isForPotential) => {\r\n    try {\r\n      var result = null;\r\n      if (isForPotential)\r\n      {\r\n        result = await processNextPotentialDraws();\r\n      }\r\n      else {\r\n        result = await processNextPrediction();\r\n      }\r\n      setPredicts(result[0]);\r\n      return predicts\r\n    } catch (error) {\r\n      console.error('Error updating predicts:', error);\r\n    }\r\n  };\r\n\r\n  /*\r\n    const getPredicts = (cols) => {\r\n  \r\n      var pred = []\r\n  \r\n      // take 1 from last hits\r\n      let lastHits = getLastHitNumbers()\r\n      var indx = Math.random() * (lastHits.length)\r\n      pred.push(lastHits[parseInt(indx)])\r\n  \r\n      // select 3 groups based on totalHits\r\n      var flip_coin = Math.random() * 2\r\n  \r\n      var arr = flip_coin >= 1 ? getTotalHitsNumbers() : getDistanceNumbers()\r\n      let low = arr[0]\r\n      let middle = arr[1]\r\n      let high = arr[2]\r\n  \r\n  \r\n      // take 1 low\r\n      indx = Math.random() * low.length\r\n      pred.push(low[parseInt(indx)].Value)\r\n  \r\n  \r\n      // take 2 middle\r\n      indx = Math.random() * middle.length\r\n      pred.push(middle[parseInt(indx)].Value)\r\n  \r\n      indx = Math.random() * middle.length\r\n      pred.push(middle[parseInt(indx)].Value)\r\n  \r\n      if (flip_coin < 1) {\r\n        // add two more\r\n        indx = Math.random() * middle.length\r\n        pred.push(middle[parseInt(indx)].Value)\r\n        indx = Math.random() * middle.length\r\n        pred.push(middle[parseInt(indx)].Value)\r\n      }\r\n  \r\n      pred = [...new Set(pred)]\r\n      if (pred.length < 4) {\r\n        indx = Math.random() * middle.length\r\n        pred.push(middle[parseInt(indx)].Value)\r\n      }\r\n  \r\n      // take 3 high\r\n      indx = Math.random() * high.length\r\n      pred.push(high[parseInt(indx)].Value)\r\n      if (flip_coin >= 1) {\r\n        indx = Math.random() * high.length\r\n        pred.push(high[parseInt(indx)].Value)\r\n  \r\n        indx = Math.random() * high.length\r\n        pred.push(high[parseInt(indx)].Value)\r\n      }\r\n  \r\n      pred = [...new Set(pred)]\r\n      while (pred.length < cols) {\r\n        indx = Math.random() * high.length\r\n        pred.push(high[parseInt(indx)].Value)\r\n        pred = [...new Set(pred)]\r\n      }\r\n      pred.sort((a, b) => a - b)\r\n  \r\n      console.log(pred)\r\n      return pred\r\n  \r\n    }\r\n  \r\n    const getLastHitNumbers = () => {\r\n      var arr = []\r\n      for (var i = 0; i < numbers.length; i++) {\r\n        if (numbers[i].IsHit === true)\r\n          arr.push(numbers[i].Value)\r\n      }\r\n  \r\n      return arr.sort((a, b) => a - b)\r\n    }\r\n  \r\n    const getTotalHitsNumbers = () => {\r\n  \r\n      var tmp = numbers.sort((a, b) => a.TotalHits > b.TotalHits ? 1 : -1)\r\n      var low = []\r\n      var middle = []\r\n      var high = []\r\n  \r\n      var oneThird = parseInt(tmp.length / 3 + 1)\r\n      var twoThird = parseInt((tmp.length * 2) / 3 + 1)\r\n  \r\n      for (var i = 0; i < tmp.length; i++) {\r\n        if (i < oneThird) {\r\n          low.push(tmp[i])\r\n        }\r\n        else if (i < twoThird) {\r\n          middle.push(tmp[i])\r\n        }\r\n        else {\r\n          high.push(tmp[i])\r\n        }\r\n      }\r\n  \r\n      var arr = []\r\n      arr.push(low)\r\n      arr.push(middle)\r\n      arr.push(high)\r\n  \r\n      return arr\r\n    }\r\n  \r\n  \r\n    const getDistanceNumbers = () => {\r\n  \r\n      var tmp = numbers.sort((a, b) => a.Distance > b.Distance ? 1 : -1)\r\n      var low = []\r\n      var middle = []\r\n      var high = []\r\n  \r\n      var oneThird = parseInt(tmp.length / 3 + 1)\r\n      var twoThird = parseInt((tmp.length * 2) / 3 + 1)\r\n  \r\n      for (var i = 0; i < tmp.length; i++) {\r\n        if (tmp[i].Distance === 0) continue\r\n  \r\n        if (i < oneThird) {\r\n          low.push(tmp[i])\r\n        }\r\n        else if (i < twoThird) {\r\n          middle.push(tmp[i])\r\n        }\r\n        else {\r\n          high.push(tmp[i])\r\n        }\r\n      }\r\n  \r\n      var arr = []\r\n      arr.push(low)\r\n      arr.push(middle)\r\n      arr.push(high)\r\n  \r\n      return arr\r\n    }\r\n  */\r\n\r\n  const getHeader = () => {\r\n    return (\r\n      <thead className=\"table-danger text-center\">\r\n        <tr>\r\n          {Array.from(Array(10).keys()).map((no) =>\r\n            (<th key={no} className='text-warning bg-success'>{no + 1}</th>))}\r\n        </tr>\r\n      </thead>\r\n    )\r\n  }\r\n\r\n  const getRow = (start, end) => {\r\n    return (\r\n      <tr>\r\n        {numbers\r\n          .map(no => no.Value > start && no.Value <= end ?\r\n            (<td className={classNames('bg-color', { 'bg-color8': predicts.indexOf(no.Value) > -1 }, { 'bg-greenyellow': predicts.indexOf(no.Value) < 0 })} key={no.Value}>\r\n              <span className={classNames('fs-5 font-color', { 'text-danger': predicts.indexOf(no.Value) > -1 }, { 'text-success': predicts.indexOf(no.Value) < 0 })}>{no.Value}   </span>\r\n              <span className='text-primary fst-italic'>({no.Distance})</span>\r\n              <span className='my-color-2 fst-italic'>({no.TotalHits})</span></td>)\r\n            : '')}\r\n      </tr>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      {numbers &&\r\n        <Table responsive className=\"table-primary mb-3\" size=\"lg\" >\r\n          {getHeader()}\r\n\r\n          <tbody className='fw-bold' >\r\n\r\n            {getRow(0, 10)}\r\n            {getRow(10, 20)}\r\n            {getRow(20, 30)}\r\n            {getRow(30, 40)}\r\n            {getRow(40, 50)}\r\n          </tbody>\r\n\r\n          {getHeader()}\r\n        </Table>}\r\n      <div>\r\n        <Table responsive>\r\n          <thead className=\"table-danger text-center\">\r\n            <tr>\r\n              {Array.from(Array(columns).keys()).map((no) =>\r\n                (<th key={no} className='text-warning bg-success'>{no + 1}</th>))}\r\n              <th className='text-warning bg-success'>Bonus</th>\r\n            </tr>\r\n          </thead>\r\n          <tr>\r\n            {predicts.map(row => (\r\n              row.map(col => (\r\n                <td className='bg-color1 text-center text-danger fs-4 fw-bold px-2' key={col}>{col}</td>))))}                                \r\n          </tr>\r\n        </Table>\r\n        <button \r\n          type=\"button\"\r\n          onClick={() => fetchData(false)}\r\n          className=\"btn btn-primary fw-bold float-end margin-left\">Predict Next Draw</button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => fetchData(true)}\r\n          className=\"btn btn-primary fw-bold float-end margin-right\">Generate Potential Draws</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default PredictDraws"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}