{"ast":null,"code":"var _jsxFileName = \"H:\\\\programs\\\\Python_Programs\\\\Henry-react-python-app\\\\frontend\\\\react_sql_app\\\\src\\\\lottos\\\\PredictDraws.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\nimport '../App.css';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictDraws = props => {\n  _s();\n  const {\n    endpoint,\n    endpoint2,\n    columns,\n    lotto_name\n  } = props;\n  const [numbers, setNumbers] = useState();\n  const [predicts, setPredicts] = useState([1]);\n  useEffect(() => {\n    // Fetch data from the specified endpoint\n\n    (async () => {\n      const result = await axios(endpoint);\n      setNumbers(result.data.data[0].Numbers);\n      //console.log(numbers)\n    })();\n    console.log(predicts);\n  }, [predicts, columns, endpoint]);\n\n  /* const processNextPrediction = async () => {\r\n    const url = 'http://localhost:5000/api/predict_draw'\r\n    const queryParams = '?lotto_name=' + lotto_name + '&columns=' + columns;\r\n    try {\r\n      const response = await fetch(url + queryParams, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type' : 'application/json'\r\n        }\r\n      })\r\n      var pred = []\r\n      if (response == null)\r\n        return pred\r\n      const data = await response.json()\r\n      console.log(data)\r\n      return data\r\n  \r\n    } catch (error) {\r\n      console.error('Error:', error)\r\n    }\r\n  } */\n\n  const processNextPrediction = async () => {\n    try {\n      const response = await axios.post(endpoint2);\n      const result = response.data;\n      console.log(result);\n      return result;\n    } catch (error) {\n      console.error('Error processing next prediction:', error);\n    }\n  };\n  const getPredicts = cols => {\n    var pred = [];\n\n    // take 1 from last hits\n    let lastHits = getLastHitNumbers();\n    var indx = Math.random() * lastHits.length;\n    pred.push(lastHits[parseInt(indx)]);\n\n    // select 3 groups based on totalHits\n    var flip_coin = Math.random() * 2;\n    var arr = flip_coin >= 1 ? getTotalHitsNumbers() : getDistanceNumbers();\n    let low = arr[0];\n    let middle = arr[1];\n    let high = arr[2];\n\n    // take 1 low\n    indx = Math.random() * low.length;\n    pred.push(low[parseInt(indx)].Value);\n\n    // take 2 middle\n    indx = Math.random() * middle.length;\n    pred.push(middle[parseInt(indx)].Value);\n    indx = Math.random() * middle.length;\n    pred.push(middle[parseInt(indx)].Value);\n    if (flip_coin < 1) {\n      // add two more\n      indx = Math.random() * middle.length;\n      pred.push(middle[parseInt(indx)].Value);\n      indx = Math.random() * middle.length;\n      pred.push(middle[parseInt(indx)].Value);\n    }\n    pred = [...new Set(pred)];\n    if (pred.length < 4) {\n      indx = Math.random() * middle.length;\n      pred.push(middle[parseInt(indx)].Value);\n    }\n\n    // take 3 high\n    indx = Math.random() * high.length;\n    pred.push(high[parseInt(indx)].Value);\n    if (flip_coin >= 1) {\n      indx = Math.random() * high.length;\n      pred.push(high[parseInt(indx)].Value);\n      indx = Math.random() * high.length;\n      pred.push(high[parseInt(indx)].Value);\n    }\n    pred = [...new Set(pred)];\n    while (pred.length < cols) {\n      indx = Math.random() * high.length;\n      pred.push(high[parseInt(indx)].Value);\n      pred = [...new Set(pred)];\n    }\n    pred.sort((a, b) => a - b);\n    console.log(pred);\n    return pred;\n  };\n  const getLastHitNumbers = () => {\n    var arr = [];\n    for (var i = 0; i < numbers.length; i++) {\n      if (numbers[i].IsHit === true) arr.push(numbers[i].Value);\n    }\n    return arr.sort((a, b) => a - b);\n  };\n  const getTotalHitsNumbers = () => {\n    var tmp = numbers.sort((a, b) => a.TotalHits > b.TotalHits ? 1 : -1);\n    var low = [];\n    var middle = [];\n    var high = [];\n    var oneThird = parseInt(tmp.length / 3 + 1);\n    var twoThird = parseInt(tmp.length * 2 / 3 + 1);\n    for (var i = 0; i < tmp.length; i++) {\n      if (i < oneThird) {\n        low.push(tmp[i]);\n      } else if (i < twoThird) {\n        middle.push(tmp[i]);\n      } else {\n        high.push(tmp[i]);\n      }\n    }\n    var arr = [];\n    arr.push(low);\n    arr.push(middle);\n    arr.push(high);\n    return arr;\n  };\n  const getDistanceNumbers = () => {\n    var tmp = numbers.sort((a, b) => a.Distance > b.Distance ? 1 : -1);\n    var low = [];\n    var middle = [];\n    var high = [];\n    var oneThird = parseInt(tmp.length / 3 + 1);\n    var twoThird = parseInt(tmp.length * 2 / 3 + 1);\n    for (var i = 0; i < tmp.length; i++) {\n      if (tmp[i].Distance === 0) continue;\n      if (i < oneThird) {\n        low.push(tmp[i]);\n      } else if (i < twoThird) {\n        middle.push(tmp[i]);\n      } else {\n        high.push(tmp[i]);\n      }\n    }\n    var arr = [];\n    arr.push(low);\n    arr.push(middle);\n    arr.push(high);\n    return arr;\n  };\n  const getHeader = () => {\n    return /*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"table-danger text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Array.from(Array(10).keys()).map(no => /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"text-warning bg-success\",\n          children: no + 1\n        }, no, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 14\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this);\n  };\n  const getRow = (start, end) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: numbers.map(no => no.Value > start && no.Value <= end ? /*#__PURE__*/_jsxDEV(\"td\", {\n        className: classNames('bg-color', {\n          'bg-color8': predicts.indexOf(no.Value) > -1\n        }, {\n          'bg-greenyellow': predicts.indexOf(no.Value) < 0\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classNames('fs-5 font-color', {\n            'text-danger': predicts.indexOf(no.Value) > -1\n          }, {\n            'text-success': predicts.indexOf(no.Value) < 0\n          }),\n          children: [no.Value, \"   \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-primary fst-italic\",\n          children: [\"(\", no.Distance, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"my-color-2 fst-italic\",\n          children: [\"(\", no.TotalHits, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this)]\n      }, no.Value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 14\n      }, this) : '')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [numbers && /*#__PURE__*/_jsxDEV(Table, {\n      responsive: true,\n      className: \"table-primary mb-3\",\n      size: \"lg\",\n      children: [getHeader(), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"fw-bold\",\n        children: [getRow(0, 10), getRow(10, 20), getRow(20, 30), getRow(30, 40), getRow(40, 50)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), getHeader()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-danger text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [Array.from(Array(columns).keys()).map(no => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-warning bg-success\",\n              children: no + 1\n            }, no, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 18\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-warning bg-success\",\n              children: \"Bonus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: predicts.map(p => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"bg-color1 text-center text-danger fs-4 fw-bold px-2\",\n            children: p\n          }, p, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\"\n        /* onClick={() => setPredicts(getPredicts(columns + 1))} */,\n        onClick: () => setPredicts(processNextPrediction()),\n        className: \"btn btn-primary fw-bold float-end\",\n        children: \"Predict Next Draw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(PredictDraws, \"YE0vweyZwu3kBdVki0NTWBVxejc=\");\n_c = PredictDraws;\nexport default PredictDraws;\nvar _c;\n$RefreshReg$(_c, \"PredictDraws\");","map":{"version":3,"names":["React","useEffect","useState","axios","Table","classNames","jsxDEV","_jsxDEV","PredictDraws","props","_s","endpoint","endpoint2","columns","lotto_name","numbers","setNumbers","predicts","setPredicts","result","data","Numbers","console","log","processNextPrediction","response","post","error","getPredicts","cols","pred","lastHits","getLastHitNumbers","indx","Math","random","length","push","parseInt","flip_coin","arr","getTotalHitsNumbers","getDistanceNumbers","low","middle","high","Value","Set","sort","a","b","i","IsHit","tmp","TotalHits","oneThird","twoThird","Distance","getHeader","className","children","Array","from","keys","map","no","fileName","_jsxFileName","lineNumber","columnNumber","getRow","start","end","indexOf","responsive","size","p","type","onClick","_c","$RefreshReg$"],"sources":["H:/programs/Python_Programs/Henry-react-python-app/frontend/react_sql_app/src/lottos/PredictDraws.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Table } from 'react-bootstrap'\r\nimport '../App.css'\r\nimport classNames from 'classnames'\r\n\r\n\r\n\r\nconst PredictDraws = (props) => {\r\n  const { endpoint, endpoint2, columns, lotto_name } = props\r\n\r\n  const [numbers, setNumbers] = useState()\r\n  const [predicts, setPredicts] = useState([1])\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the specified endpoint\r\n\r\n    (async () => {\r\n      const result = await axios(endpoint)\r\n      setNumbers(result.data.data[0].Numbers)\r\n      //console.log(numbers)\r\n    })()\r\n    console.log(predicts)\r\n  }, [predicts, columns, endpoint]);\r\n\r\n\r\n\r\n\r\n  /* const processNextPrediction = async () => {\r\n    const url = 'http://localhost:5000/api/predict_draw'\r\n    const queryParams = '?lotto_name=' + lotto_name + '&columns=' + columns;\r\n    try {\r\n      const response = await fetch(url + queryParams, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type' : 'application/json'\r\n        }\r\n      })\r\n      var pred = []\r\n      if (response == null)\r\n        return pred\r\n      const data = await response.json()\r\n      console.log(data)\r\n      return data\r\n  \r\n    } catch (error) {\r\n      console.error('Error:', error)\r\n    }\r\n  } */\r\n\r\n  const processNextPrediction = async () => {\r\n    try {\r\n      const response = await axios.post(endpoint2)\r\n      const result = response.data\r\n      console.log(result)\r\n      return result\r\n    } catch (error) {\r\n      console.error('Error processing next prediction:', error);\r\n    }  \r\n  }\r\n\r\n  const getPredicts = (cols) => {\r\n\r\n    var pred = []\r\n\r\n    // take 1 from last hits\r\n    let lastHits = getLastHitNumbers()\r\n    var indx = Math.random() * (lastHits.length)\r\n    pred.push(lastHits[parseInt(indx)])\r\n\r\n    // select 3 groups based on totalHits\r\n    var flip_coin = Math.random() * 2\r\n\r\n    var arr = flip_coin >= 1 ? getTotalHitsNumbers() : getDistanceNumbers()\r\n    let low = arr[0]\r\n    let middle = arr[1]\r\n    let high = arr[2]\r\n\r\n\r\n    // take 1 low\r\n    indx = Math.random() * low.length\r\n    pred.push(low[parseInt(indx)].Value)\r\n\r\n\r\n    // take 2 middle\r\n    indx = Math.random() * middle.length\r\n    pred.push(middle[parseInt(indx)].Value)\r\n\r\n    indx = Math.random() * middle.length\r\n    pred.push(middle[parseInt(indx)].Value)\r\n\r\n    if (flip_coin < 1) {\r\n      // add two more\r\n      indx = Math.random() * middle.length\r\n      pred.push(middle[parseInt(indx)].Value)\r\n      indx = Math.random() * middle.length\r\n      pred.push(middle[parseInt(indx)].Value)\r\n    }\r\n\r\n    pred = [...new Set(pred)]\r\n    if (pred.length < 4) {\r\n      indx = Math.random() * middle.length\r\n      pred.push(middle[parseInt(indx)].Value)\r\n    }\r\n\r\n    // take 3 high\r\n    indx = Math.random() * high.length\r\n    pred.push(high[parseInt(indx)].Value)\r\n    if (flip_coin >= 1) {\r\n      indx = Math.random() * high.length\r\n      pred.push(high[parseInt(indx)].Value)\r\n\r\n      indx = Math.random() * high.length\r\n      pred.push(high[parseInt(indx)].Value)\r\n    }\r\n\r\n    pred = [...new Set(pred)]\r\n    while (pred.length < cols) {\r\n      indx = Math.random() * high.length\r\n      pred.push(high[parseInt(indx)].Value)\r\n      pred = [...new Set(pred)]\r\n    }\r\n    pred.sort((a, b) => a - b)\r\n\r\n    console.log(pred)\r\n    return pred\r\n\r\n  }\r\n\r\n  const getLastHitNumbers = () => {\r\n    var arr = []\r\n    for (var i = 0; i < numbers.length; i++) {\r\n      if (numbers[i].IsHit === true)\r\n        arr.push(numbers[i].Value)\r\n    }\r\n\r\n    return arr.sort((a, b) => a - b)\r\n  }\r\n\r\n  const getTotalHitsNumbers = () => {\r\n\r\n    var tmp = numbers.sort((a, b) => a.TotalHits > b.TotalHits ? 1 : -1)\r\n    var low = []\r\n    var middle = []\r\n    var high = []\r\n\r\n    var oneThird = parseInt(tmp.length / 3 + 1)\r\n    var twoThird = parseInt((tmp.length * 2) / 3 + 1)\r\n\r\n    for (var i = 0; i < tmp.length; i++) {\r\n      if (i < oneThird) {\r\n        low.push(tmp[i])\r\n      }\r\n      else if (i < twoThird) {\r\n        middle.push(tmp[i])\r\n      }\r\n      else {\r\n        high.push(tmp[i])\r\n      }\r\n    }\r\n\r\n    var arr = []\r\n    arr.push(low)\r\n    arr.push(middle)\r\n    arr.push(high)\r\n\r\n    return arr\r\n  }\r\n\r\n\r\n  const getDistanceNumbers = () => {\r\n\r\n    var tmp = numbers.sort((a, b) => a.Distance > b.Distance ? 1 : -1)\r\n    var low = []\r\n    var middle = []\r\n    var high = []\r\n\r\n    var oneThird = parseInt(tmp.length / 3 + 1)\r\n    var twoThird = parseInt((tmp.length * 2) / 3 + 1)\r\n\r\n    for (var i = 0; i < tmp.length; i++) {\r\n      if (tmp[i].Distance === 0) continue\r\n\r\n      if (i < oneThird) {\r\n        low.push(tmp[i])\r\n      }\r\n      else if (i < twoThird) {\r\n        middle.push(tmp[i])\r\n      }\r\n      else {\r\n        high.push(tmp[i])\r\n      }\r\n    }\r\n\r\n    var arr = []\r\n    arr.push(low)\r\n    arr.push(middle)\r\n    arr.push(high)\r\n\r\n    return arr\r\n  }\r\n\r\n\r\n  const getHeader = () => {\r\n    return (\r\n      <thead className=\"table-danger text-center\">\r\n        <tr>\r\n          {Array.from(Array(10).keys()).map((no) =>\r\n            (<th key={no} className='text-warning bg-success'>{no + 1}</th>))}\r\n        </tr>\r\n      </thead>\r\n    )\r\n  }\r\n\r\n  const getRow = (start, end) => {\r\n    return (\r\n      <tr>\r\n        {numbers\r\n          .map(no => no.Value > start && no.Value <= end ?\r\n            (<td className={classNames('bg-color', { 'bg-color8': predicts.indexOf(no.Value) > -1 }, { 'bg-greenyellow': predicts.indexOf(no.Value) < 0 })} key={no.Value}>\r\n              <span className={classNames('fs-5 font-color', { 'text-danger': predicts.indexOf(no.Value) > -1 }, { 'text-success': predicts.indexOf(no.Value) < 0 })}>{no.Value}   </span>\r\n              <span className='text-primary fst-italic'>({no.Distance})</span>\r\n              <span className='my-color-2 fst-italic'>({no.TotalHits})</span></td>)\r\n            : '')}\r\n      </tr>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {numbers &&\r\n        <Table responsive className=\"table-primary mb-3\" size=\"lg\" >\r\n          {getHeader()}\r\n\r\n          <tbody className='fw-bold' >\r\n\r\n            {getRow(0, 10)}\r\n            {getRow(10, 20)}\r\n            {getRow(20, 30)}\r\n            {getRow(30, 40)}\r\n            {getRow(40, 50)}\r\n          </tbody>\r\n\r\n          {getHeader()}\r\n        </Table>}\r\n      <div>\r\n        <Table responsive>\r\n          <thead className=\"table-danger text-center\">\r\n            <tr>\r\n              {Array.from(Array(columns).keys()).map((no) =>\r\n                (<th key={no} className='text-warning bg-success'>{no + 1}</th>))}\r\n              <th className='text-warning bg-success'>Bonus</th>\r\n            </tr>\r\n          </thead>\r\n          <tr>\r\n            {predicts.map(p => (<td className='bg-color1 text-center text-danger fs-4 fw-bold px-2' key={p}>{p}</td>))}\r\n          </tr>\r\n        </Table>\r\n        <button\r\n          type=\"button\"\r\n          /* onClick={() => setPredicts(getPredicts(columns + 1))} */\r\n          onClick={() => setPredicts(processNextPrediction())}\r\n          className=\"btn btn-primary fw-bold float-end\">Predict Next Draw</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default PredictDraws"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}