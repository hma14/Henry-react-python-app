{"ast":null,"code":"var _jsxFileName = \"H:\\\\programs\\\\Python_Programs\\\\Henry-react-python-app\\\\frontend\\\\react_sql_app\\\\src\\\\lottos\\\\PredictDraws.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\nimport '../App.css';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictDraws = props => {\n  _s();\n  const {\n    endpoint,\n    columns,\n    numberRange\n  } = props;\n  const [numbers, setNumbers] = useState();\n  const [predicts, setPredicts] = useState([]);\n  useEffect(() => {\n    // Fetch data from the specified endpoint\n    axios.get(endpoint).then(response => {\n      setNumbers(response.data.data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, [endpoint, predicts]);\n  const processNextPrediction = async () => {\n    try {\n      const response = await fetch('/api/predict_draw', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n        // passing data here\n      });\n    } catch (error) {\n      console.error('Error', error);\n    }\n  };\n  const getPredicts = (columns, numberRange) => {\n    var pred = [];\n\n    // take 1 from last hits\n    let lastHits = getLastHitNumbers();\n    var indx = Math.random() * lastHits.length;\n    pred.push(lastHits[parseInt(indx)]);\n\n    // select 3 groups based on totalHits\n    var flip_coin = Math.random() * 2;\n    var arr = flip_coin >= 1 ? getTotalHitsNumbers() : getDistanceNumbers();\n    let low = arr[0];\n    let middle = arr[1];\n    let high = arr[2];\n\n    // take 1 low\n    indx = Math.random() * low.length;\n    pred.push(low[parseInt(indx)].value);\n\n    // take 2 middle\n    indx = Math.random() * middle.length;\n    pred.push(middle[parseInt(indx)].value);\n    indx = Math.random() * middle.length;\n    pred.push(middle[parseInt(indx)].value);\n    if (flip_coin < 1) {\n      // add two more\n      indx = Math.random() * middle.length;\n      pred.push(middle[parseInt(indx)].value);\n      indx = Math.random() * middle.length;\n      pred.push(middle[parseInt(indx)].value);\n    }\n    pred = [...new Set(pred)];\n    if (pred.length < 4) {\n      indx = Math.random() * middle.length;\n      pred.push(middle[parseInt(indx)].value);\n    }\n\n    // take 3 high\n    indx = Math.random() * high.length;\n    pred.push(high[parseInt(indx)].value);\n    if (flip_coin >= 1) {\n      indx = Math.random() * high.length;\n      pred.push(high[parseInt(indx)].value);\n      indx = Math.random() * high.length;\n      pred.push(high[parseInt(indx)].value);\n    }\n    pred = [...new Set(pred)];\n    while (pred.length < columns) {\n      indx = Math.random() * high.length;\n      pred.push(high[parseInt(indx)].value);\n      pred = [...new Set(pred)];\n    }\n    pred.sort((a, b) => a - b);\n    console.log(pred);\n    return pred;\n  };\n  const getLastHitNumbers = () => {\n    var arr = [];\n    for (var i = 0; i < numbers.length; i++) {\n      if (numbers[i].IsHit === true) arr.push(numbers[i].Value);\n    }\n    return arr.sort((a, b) => a - b);\n  };\n  const getTotalHitsNumbers = () => {\n    var tmp = numbers.sort((a, b) => a.TotalHits > b.TotalHits ? 1 : -1);\n    var low = [];\n    var middle = [];\n    var high = [];\n    var oneThird = parseInt(tmp.length / 3 + 1);\n    var twoThird = parseInt(tmp.length * 2 / 3 + 1);\n    for (var i = 0; i < tmp.length; i++) {\n      if (i < oneThird) {\n        low.push(tmp[i]);\n      } else if (i < twoThird) {\n        middle.push(tmp[i]);\n      } else {\n        high.push(tmp[i]);\n      }\n    }\n    var arr = [];\n    arr.push(low);\n    arr.push(middle);\n    arr.push(high);\n    return arr;\n  };\n  const getDistanceNumbers = () => {\n    var tmp = numbers.sort((a, b) => a.Distance > b.Distance ? 1 : -1);\n    var low = [];\n    var middle = [];\n    var high = [];\n    var oneThird = parseInt(tmp.length / 3 + 1);\n    var twoThird = parseInt(tmp.length * 2 / 3 + 1);\n    for (var i = 0; i < tmp.length; i++) {\n      if (tmp[i].Distance === 0) continue;\n      if (i < oneThird) {\n        low.push(tmp[i]);\n      } else if (i < twoThird) {\n        middle.push(tmp[i]);\n      } else {\n        high.push(tmp[i]);\n      }\n    }\n    var arr = [];\n    arr.push(low);\n    arr.push(middle);\n    arr.push(high);\n    return arr;\n  };\n  const getPredicts_org = (columns, numberRange) => {\n    var min = numbers[0].value;\n    var max = numbers[numberRange - 1].value;\n    var predicts = [];\n    while (predicts.length < columns) {\n      predicts.push(parseInt(min + Math.random() * (max - min)));\n      predicts = [...new Set(predicts)];\n    }\n    predicts.sort((a, b) => a - b);\n    let arr = getTotalHitsNumbers();\n    console.log(arr);\n    return predicts;\n  };\n  const getHeader = () => {\n    return /*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"table-danger text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Array.from(Array(10).keys()).map(no => /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"text-warning bg-success\",\n          children: no + 1\n        }, no, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 14\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  };\n  const getRow = (start, end) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: numbers[0].Numbers.map(no => no.Value > start && no.Value <= end ? /*#__PURE__*/_jsxDEV(\"td\", {\n        className: classNames('bg-color', {\n          'bg-color8': predicts.indexOf(no.value) > -1\n        }, {\n          'bg-greenyellow': predicts.indexOf(no.value) < 0\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classNames('fs-5 font-color', {\n            'text-danger': predicts.indexOf(no.value) > -1\n          }, {\n            'text-success': predicts.indexOf(no.Value) < 0\n          }),\n          children: [no.Value, \"   \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-primary fst-italic\",\n          children: [\"(\", no.Distance, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"my-color-2 fst-italic\",\n          children: [\"(\", no.TotalHits, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this)]\n      }, no.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 14\n      }, this) : '')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [numbers && /*#__PURE__*/_jsxDEV(Table, {\n      responsive: true,\n      className: \"table-primary mb-3\",\n      size: \"lg\",\n      children: [getHeader(), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"fw-bold\",\n        children: [getRow(0, 10), getRow(10, 20), getRow(20, 30), getRow(30, 40), getRow(40, 50)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), getHeader()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-danger text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Array.from(Array(columns).keys()).map(no => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-warning bg-success\",\n              children: no + 1\n            }, no, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 18\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: predicts.map(p => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"bg-color1 text-center text-danger fs-4 fw-bold px-2\",\n            children: p\n          }, p, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setPredicts(getPredicts(columns, numberRange))\n        /* onClick={() => setPredicts(processNextPrediction(columns, numberRange))} */,\n        className: \"btn btn-primary fw-bold float-end\",\n        children: \"Predict Next Draw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s(PredictDraws, \"BmJAQwyelA/NyuIxEsiPkAtmFwQ=\");\n_c = PredictDraws;\nexport default PredictDraws;\nvar _c;\n$RefreshReg$(_c, \"PredictDraws\");","map":{"version":3,"names":["React","useEffect","useState","axios","Table","classNames","jsxDEV","_jsxDEV","PredictDraws","props","_s","endpoint","columns","numberRange","numbers","setNumbers","predicts","setPredicts","get","then","response","data","catch","error","console","processNextPrediction","fetch","method","headers","getPredicts","pred","lastHits","getLastHitNumbers","indx","Math","random","length","push","parseInt","flip_coin","arr","getTotalHitsNumbers","getDistanceNumbers","low","middle","high","value","Set","sort","a","b","log","i","IsHit","Value","tmp","TotalHits","oneThird","twoThird","Distance","getPredicts_org","min","max","getHeader","className","children","Array","from","keys","map","no","fileName","_jsxFileName","lineNumber","columnNumber","getRow","start","end","Numbers","indexOf","responsive","size","p","type","onClick","_c","$RefreshReg$"],"sources":["H:/programs/Python_Programs/Henry-react-python-app/frontend/react_sql_app/src/lottos/PredictDraws.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Table } from 'react-bootstrap'\r\nimport '../App.css'\r\nimport classNames from 'classnames'\r\n\r\n\r\n\r\nconst PredictDraws = (props) => {\r\n  const { endpoint, columns, numberRange } = props\r\n\r\n  const [numbers, setNumbers] = useState()\r\n  const [predicts, setPredicts] = useState([])\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the specified endpoint\r\n    axios.get(endpoint)\r\n      .then(response => {\r\n        setNumbers(response.data.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n\r\n  }, [endpoint, predicts]);\r\n\r\n  const processNextPrediction = async () => \r\n  {\r\n    try {\r\n\r\n      const response = await fetch('/api/predict_draw', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        // passing data here\r\n\r\n      })\r\n    } catch (error) {\r\n      console.error('Error', error)\r\n    }\r\n  }\r\n\r\n  const getPredicts = (columns, numberRange) => {\r\n\r\n    var pred = []\r\n\r\n    // take 1 from last hits\r\n    let lastHits = getLastHitNumbers()\r\n    var indx = Math.random() * (lastHits.length)\r\n    pred.push(lastHits[parseInt(indx)])\r\n\r\n    // select 3 groups based on totalHits\r\n    var flip_coin = Math.random() * 2\r\n\r\n\r\n    var arr = flip_coin >= 1 ? getTotalHitsNumbers() : getDistanceNumbers()\r\n    let low = arr[0]\r\n    let middle = arr[1]\r\n    let high = arr[2]\r\n\r\n\r\n    // take 1 low\r\n    indx = Math.random() * low.length\r\n    pred.push(low[parseInt(indx)].value)\r\n\r\n\r\n    // take 2 middle\r\n    indx = Math.random() * middle.length\r\n    pred.push(middle[parseInt(indx)].value)\r\n\r\n    indx = Math.random() * middle.length\r\n    pred.push(middle[parseInt(indx)].value)\r\n\r\n    if (flip_coin < 1) {\r\n      // add two more\r\n      indx = Math.random() * middle.length\r\n      pred.push(middle[parseInt(indx)].value)\r\n      indx = Math.random() * middle.length\r\n      pred.push(middle[parseInt(indx)].value)\r\n    }\r\n\r\n    pred = [...new Set(pred)]\r\n    if (pred.length < 4) {\r\n      indx = Math.random() * middle.length\r\n      pred.push(middle[parseInt(indx)].value)\r\n    }\r\n\r\n    // take 3 high\r\n    indx = Math.random() * high.length\r\n    pred.push(high[parseInt(indx)].value)\r\n    if (flip_coin >= 1) {\r\n      indx = Math.random() * high.length\r\n      pred.push(high[parseInt(indx)].value)\r\n\r\n      indx = Math.random() * high.length\r\n      pred.push(high[parseInt(indx)].value)\r\n    }\r\n\r\n    pred = [...new Set(pred)]\r\n    while (pred.length < columns) {\r\n      indx = Math.random() * high.length\r\n      pred.push(high[parseInt(indx)].value)\r\n      pred = [...new Set(pred)]\r\n    }\r\n\r\n\r\n    pred.sort((a, b) => a - b)\r\n\r\n    console.log(pred)\r\n    return pred\r\n\r\n  }\r\n\r\n  const getLastHitNumbers = () => {\r\n    var arr = []\r\n    for (var i = 0; i < numbers.length; i++) {\r\n      if (numbers[i].IsHit === true)\r\n        arr.push(numbers[i].Value)\r\n    }\r\n    return arr.sort((a, b) => a - b)\r\n  }\r\n\r\n  const getTotalHitsNumbers = () => {\r\n\r\n    var tmp = numbers.sort((a, b) => a.TotalHits > b.TotalHits ? 1 : -1)\r\n    var low = []\r\n    var middle = []\r\n    var high = []\r\n\r\n    var oneThird = parseInt(tmp.length / 3 + 1)\r\n    var twoThird = parseInt((tmp.length * 2) / 3 + 1)\r\n\r\n    for (var i = 0; i < tmp.length; i++) {\r\n      if (i < oneThird) {\r\n        low.push(tmp[i])\r\n      }\r\n      else if (i < twoThird) {\r\n        middle.push(tmp[i])\r\n      }\r\n      else {\r\n        high.push(tmp[i])\r\n      }\r\n    }\r\n\r\n    var arr = []\r\n    arr.push(low)\r\n    arr.push(middle)\r\n    arr.push(high)\r\n\r\n    return arr\r\n  }\r\n\r\n\r\n  const getDistanceNumbers = () => {\r\n\r\n    var tmp = numbers.sort((a, b) => a.Distance > b.Distance ? 1 : -1)\r\n    var low = []\r\n    var middle = []\r\n    var high = []\r\n\r\n    var oneThird = parseInt(tmp.length / 3 + 1)\r\n    var twoThird = parseInt((tmp.length * 2) / 3 + 1)\r\n\r\n    for (var i = 0; i < tmp.length; i++) {\r\n      if (tmp[i].Distance === 0) continue\r\n\r\n      if (i < oneThird) {\r\n        low.push(tmp[i])\r\n      }\r\n      else if (i < twoThird) {\r\n        middle.push(tmp[i])\r\n      }\r\n      else {\r\n        high.push(tmp[i])\r\n      }\r\n    }\r\n\r\n    var arr = []\r\n    arr.push(low)\r\n    arr.push(middle)\r\n    arr.push(high)\r\n\r\n    return arr\r\n  }\r\n\r\n\r\n\r\n  const getPredicts_org = (columns, numberRange) => {\r\n\r\n    var min = numbers[0].value\r\n    var max = numbers[numberRange - 1].value\r\n\r\n    var predicts = []\r\n    while (predicts.length < columns) {\r\n      predicts.push(parseInt((min + (Math.random() * (max - min)))))\r\n      predicts = [...new Set(predicts)]\r\n    }\r\n    predicts.sort((a, b) => a - b)\r\n\r\n\r\n    let arr = getTotalHitsNumbers()\r\n    console.log(arr)\r\n    return predicts\r\n\r\n  }\r\n\r\n\r\n\r\n  const getHeader = () => {\r\n    return (\r\n      <thead className=\"table-danger text-center\">\r\n        <tr>\r\n          {Array.from(Array(10).keys()).map((no) =>\r\n            (<th key={no} className='text-warning bg-success'>{no + 1}</th>))}\r\n        </tr>\r\n      </thead>\r\n    )\r\n  }\r\n\r\n  const getRow = (start, end) => {\r\n    return (\r\n      <tr>\r\n        {numbers[0].Numbers\r\n          .map(no => no.Value > start && no.Value <= end ?\r\n            (<td className={classNames('bg-color', { 'bg-color8': predicts.indexOf(no.value) > -1 }, { 'bg-greenyellow': predicts.indexOf(no.value) < 0 })} key={no.value}>\r\n              <span className={classNames('fs-5 font-color', { 'text-danger': predicts.indexOf(no.value) > -1 }, { 'text-success': predicts.indexOf(no.Value) < 0 })}>{no.Value}   </span>\r\n              <span className='text-primary fst-italic'>({no.Distance})</span>\r\n              <span className='my-color-2 fst-italic'>({no.TotalHits})</span></td>)\r\n            : '')}\r\n      </tr>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {numbers &&\r\n        <Table responsive className=\"table-primary mb-3\" size=\"lg\" >\r\n          {getHeader()}\r\n\r\n          <tbody className='fw-bold' >\r\n\r\n            {getRow(0, 10)}\r\n            {getRow(10, 20)}\r\n            {getRow(20, 30)}\r\n            {getRow(30, 40)}\r\n            {getRow(40, 50)}\r\n          </tbody>\r\n\r\n          {getHeader()}\r\n        </Table>}\r\n      <div>\r\n        <Table responsive>\r\n          <thead className=\"table-danger text-center\">\r\n            <tr>\r\n              {Array.from(Array(columns).keys()).map((no) =>\r\n                (<th key={no} className='text-warning bg-success'>{no + 1}</th>))}\r\n            </tr>\r\n          </thead>\r\n          <tr>\r\n            {predicts.map(p => (<td className='bg-color1 text-center text-danger fs-4 fw-bold px-2' key={p}>{p}</td>))}\r\n          </tr>\r\n        </Table>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setPredicts(getPredicts(columns, numberRange))}\r\n          /* onClick={() => setPredicts(processNextPrediction(columns, numberRange))} */\r\n          className=\"btn btn-primary fw-bold float-end\">Predict Next Draw</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default PredictDraws"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}